{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, Divider, List } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { useQuery } from '@apollo/react-hooks';\nimport { COLLECTIONS_QUERY } from './_types';\nimport './_style.scss';\nimport CartController from '../CartController/CartController';\nimport NavItems from './navItems.json';\nimport NavBarItem from '../NavBarItem/NavBarItem';\n\n/**\n * General component description.\n */\nconst NavBar = () => {\n  const [open, setOpen] = React.useState(false);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(COLLECTIONS_QUERY, {\n    variables: {}\n  });\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(AppBar, {\n    position: \"static\"\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    className: \"navbar-button\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleDrawer\n  }, __jsx(MenuIcon, null)), __jsx(Typography, {\n    variant: \"h6\"\n  }, \"Colgate Connect\"), __jsx(CartController, null))), __jsx(Drawer, {\n    className: \"navbar-drawer\",\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: 'navbar-drawer'\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-drawer--header\"\n  }, __jsx(Typography, {\n    variant: \"h6\"\n  }, \"Site Navigation\"), __jsx(IconButton, {\n    onClick: toggleDrawer\n  }, __jsx(ChevronLeftIcon, null))), __jsx(Divider, null), !loading && !error && data && __jsx(List, null, NavItems.navigationItems.map(({\n    title,\n    products\n  }, key) => __jsx(NavBarItem, {\n    title: title,\n    products: products\n  })))));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/colgate/Desktop/react-store/components/NavBar/NavBar.tsx"],"names":["React","AppBar","Toolbar","Typography","IconButton","Drawer","Divider","List","MenuIcon","ChevronLeftIcon","useQuery","COLLECTIONS_QUERY","CartController","NavItems","NavBarItem","NavBar","open","setOpen","useState","data","loading","error","variables","toggleDrawer","paper","navigationItems","map","title","products","key"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,IAPF,QASO,mBATP;AAUA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,iBADF,QAEO,UAFP;AAGA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAwC,0BAAxC;;AAaA;;;AAGA,MAAMC,MAAgC,GAAG,MAAM;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,CAAwB,KAAxB,CAAxB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CACvCC,iBADuC,EAEvC;AAAEW,IAAAA,SAAS,EAAE;AAAb,GAFuC,CAAzC;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,SACE,4BACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAC;AADX,KAGE,MAAC,OAAD,QACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,kBAAW,MAJb;AAKE,IAAA,OAAO,EAAEO;AALX,KAOE,MAAC,QAAD,OAPF,CADF,EAUE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,uBAVF,EAaE,MAAC,cAAD,OAbF,CAHF,CADF,EAoBE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAC,YAFV;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,IAAI,EAAEP,IAJR;AAKE,IAAA,OAAO,EAAE;AACPQ,MAAAA,KAAK,EAAE;AADA;AALX,KASE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,uBADF,EAEE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAED;AAArB,KACE,MAAC,eAAD,OADF,CAFF,CATF,EAeE,MAAC,OAAD,OAfF,EAgBI,CAACH,OAAD,IAAY,CAACC,KAAb,IAAsBF,IAAtB,IACF,MAAC,IAAD,QACGN,QAAQ,CAACY,eAAT,CAAyBC,GAAzB,CAA6B,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAsBC,GAAtB,KAC5B,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,KAAnB;AAA0B,IAAA,QAAQ,EAAEC;AAApC,IADD,CADH,CAjBF,CApBF,CADF;AA+CD,CA1DD;;AA4DA,eAAeb,MAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Drawer,\n  Divider,\n  List,\n  ListItem, ListItemIcon, ListItemText, Collapse,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n  COLLECTIONS_QUERY, Collections,\n} from './_types';\nimport './_style.scss';\nimport CartController from '../CartController/CartController';\nimport NavItems from './navItems.json';\nimport NavBarItem, { ProductItem } from '../NavBarItem/NavBarItem';\n\ntype Props = {\n  /** Navigation items to be displayed in NavBar */\n  items: string[];\n};\n\ninterface NavItems {\n  title: string;\n  handle: string;\n  products: ProductItem[];\n}\n\n/**\n * General component description.\n */\nconst NavBar: FunctionComponent<Props> = () => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const { data, loading, error } = useQuery<Collections, object>(\n    COLLECTIONS_QUERY,\n    { variables: {} },\n  );\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <>\n      <AppBar\n        position=\"static\"\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className=\"navbar-button\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            Colgate Connect\n          </Typography>\n          <CartController />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className=\"navbar-drawer\"\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: 'navbar-drawer',\n        }}\n      >\n        <div className=\"navbar-drawer--header\">\n          <Typography variant=\"h6\">Site Navigation</Typography>\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        { !loading && !error && data && (\n        <List>\n          {NavItems.navigationItems.map(({ title, products }, key) => (\n            <NavBarItem title={title} products={products} />\n          ))}\n        </List>\n        )}\n      </Drawer>\n    </>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}