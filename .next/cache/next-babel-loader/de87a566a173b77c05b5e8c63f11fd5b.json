{"ast":null,"code":"import { gql } from 'apollo-boost';\nexport const CREATE_CART = gql`\n    mutation checkoutCreate($input: CheckoutCreateInput!) {\n        checkoutCreate(input: $input) {\n            checkout {\n                id\n            }\n            checkoutUserErrors {\n                code\n                field\n                message\n            }\n        }\n    }\n`;\nexport const GET_CART_QUERY = gql`\n    fragment checkout on Checkout {\n        id\n        webUrl\n        subtotalPriceV2 {\n            amount\n            currencyCode\n        }\n        totalTaxV2 {\n            amount\n            currencyCode\n        }\n        totalPriceV2 {\n            amount\n            currencyCode\n        }\n        lineItems(first: 250) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n            }\n            edges {\n                node {\n                    id\n                    title\n                    variant {\n                        id\n                        title\n                        image {\n                            transformedSrc\n                        }\n                        priceV2 {\n                            amount\n                            currencyCode\n                        }\n                    }\n                    quantity\n                }\n            }\n        }\n    }\n    query checkout($checkoutId: ID!) {\n        node(id: $checkoutId) {\n            ... on Checkout {\n                ...checkout\n            }\n        }\n    }\n`;\nexport const CHECKOUT_LINE_ITEMS_REPLACE_MUTATION = gql`\n    mutation checkoutLineItemsReplace($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n        checkoutLineItemsReplace(checkoutId: $checkoutId, lineItems: $lineItems) {\n            checkout {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }\n`;","map":{"version":3,"sources":["/Users/colgate/Desktop/react-store/components/CartController/_types.ts"],"names":["gql","CREATE_CART","GET_CART_QUERY","CHECKOUT_LINE_ITEMS_REPLACE_MUTATION"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AA4CA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;;;;CAAxB;AAeP,OAAO,MAAME,cAAc,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA3B;AAkDP,OAAO,MAAMG,oCAAoC,GAAGH,GAAI;;;;;;;;;;;;;CAAjD","sourcesContent":["import { gql } from 'apollo-boost';\nimport { LineItem } from '../PDPComponent/_types';\n\nexport type PriceV2 = {\n  amount: string;\n  currency: string;\n};\n\nexport interface GetCartRequest {\n  checkoutId: string;\n}\n\nexport type GetCartResponse = {\n  node: {\n    id: string;\n    webUrl: string;\n    subtotalPriceV2: PriceV2;\n    totalTaxV2: PriceV2;\n    totalPriceV2: PriceV2;\n    lineItems: {\n      pageInfo: {\n        hasNextPage: boolean;\n        hasPreviousPage: boolean;\n      };\n      edges: LineItem[];\n    };\n  };\n};\n\nexport type CreateCartResponse = {\n  data: {\n    checkoutCreate: {\n      checkout: {\n        id: string;\n      };\n    };\n    checkoutUserErrors: string[];\n  };\n};\n\nexport type CreateCartRequest = {\n  input: object;\n};\n\nexport const CREATE_CART = gql`\n    mutation checkoutCreate($input: CheckoutCreateInput!) {\n        checkoutCreate(input: $input) {\n            checkout {\n                id\n            }\n            checkoutUserErrors {\n                code\n                field\n                message\n            }\n        }\n    }\n`;\n\nexport const GET_CART_QUERY = gql`\n    fragment checkout on Checkout {\n        id\n        webUrl\n        subtotalPriceV2 {\n            amount\n            currencyCode\n        }\n        totalTaxV2 {\n            amount\n            currencyCode\n        }\n        totalPriceV2 {\n            amount\n            currencyCode\n        }\n        lineItems(first: 250) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n            }\n            edges {\n                node {\n                    id\n                    title\n                    variant {\n                        id\n                        title\n                        image {\n                            transformedSrc\n                        }\n                        priceV2 {\n                            amount\n                            currencyCode\n                        }\n                    }\n                    quantity\n                }\n            }\n        }\n    }\n    query checkout($checkoutId: ID!) {\n        node(id: $checkoutId) {\n            ... on Checkout {\n                ...checkout\n            }\n        }\n    }\n`;\n\nexport const CHECKOUT_LINE_ITEMS_REPLACE_MUTATION = gql`\n    mutation checkoutLineItemsReplace($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n        checkoutLineItemsReplace(checkoutId: $checkoutId, lineItems: $lineItems) {\n            checkout {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}