{"ast":null,"code":"var __jsx = React.createElement;\n\n/* global localStorage */\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { IconButton, Popover, Typography } from '@material-ui/core';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { CREATE_CART, GET_CART_QUERY } from './_types';\nimport './_style.scss';\nimport CartContent from '../CartContent/CartContent';\n\nconst CartController = () => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null); // Check if cart token exists in LocalStorage\n\n  const {\n    0: cartToken,\n    1: setCartToken\n  } = useState(null); // Create new cart if token does not exist\n\n  const createVars = {\n    input: {}\n  };\n  const [createCart, {\n    data: createCartData,\n    loading: createCartLoading,\n    error: createCartError\n  }] = useMutation(CREATE_CART, {\n    variables: createVars\n  }); // Get cart data\n\n  const variables = {\n    checkoutId: cartToken\n  };\n  const {\n    data: getCartData,\n    loading: getCartLoading,\n    error: getCartError\n  } = useQuery(GET_CART_QUERY, {\n    skip: !cartToken,\n    variables\n  });\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n\n  const handleOpen = event => {\n    handleClick(event);\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (window.localStorage && !getCartData) {\n      setCartToken(window.localStorage.getItem('shopifyCartToken'));\n\n      if (!window.localStorage.getItem('shopifyCartToken')) {\n        createCart().then(res => {// console.log(res);\n        });\n      }\n    } // To be executed after new cart is created\n\n\n    const onCompleted = res => {\n      if (res) {\n        // console.log(res);\n        setCartToken(res.checkoutCreate.checkout.id);\n        localStorage.setItem('shopifyCartToken', cartToken);\n      }\n    }; // To be executed after create cart error\n\n\n    const onError = error => __jsx(\"div\", null, error);\n\n    if (onCompleted || onError) {\n      if (onCompleted && !createCartLoading && !createCartError) {\n        onCompleted(createCartData);\n      } else if (onError && !createCartLoading && createCartError) {\n        onError(createCartError);\n      }\n    }\n  }, [cartToken, createCart, createCartData, createCartError, createCartLoading, getCartData]);\n  return __jsx(\"div\", {\n    id: \"cart-btn\"\n  }, (createCartLoading || getCartLoading) && __jsx(Typography, {\n    variant: \"body2\"\n  }, \"Loading cart...\"), (createCartError || getCartError) && __jsx(Typography, {\n    variant: \"body2\"\n  }, \"Error!\"), !getCartLoading && !createCartLoading && !getCartError && !createCartError && getCartData && __jsx(React.Fragment, null, __jsx(IconButton, {\n    edge: \"end\",\n    color: \"inherit\",\n    \"aria-label\": \"cart\",\n    onClick: handleOpen\n  }, __jsx(ShoppingCartIcon, null)), __jsx(Popover, {\n    open: open,\n    onClose: handleClose,\n    disableScrollLock: true,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    }\n  }, __jsx(CartContent, {\n    cart: getCartData\n  }))));\n};\n\nexport default CartController;","map":{"version":3,"sources":["/Users/colgate/Desktop/react-store/components/CartController/CartController.tsx"],"names":["React","useEffect","useState","useMutation","useQuery","IconButton","Popover","Typography","ShoppingCartIcon","CREATE_CART","GET_CART_QUERY","CartContent","CartController","open","setOpen","anchorEl","setAnchorEl","cartToken","setCartToken","createVars","input","createCart","data","createCartData","loading","createCartLoading","error","createCartError","variables","checkoutId","getCartData","getCartLoading","getCartError","skip","handleClick","event","currentTarget","handleClose","handleOpen","window","localStorage","getItem","then","res","onCompleted","checkoutCreate","checkout","id","setItem","onError","vertical","horizontal"],"mappings":"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","sourcesContent":["/* global localStorage */\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport {\n  IconButton, Popover, Typography,\n} from '@material-ui/core';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport {\n  CREATE_CART, CreateCartResponse, GetCartRequest, GET_CART_QUERY, CreateCartRequest,\n} from './_types';\nimport './_style.scss';\nimport CartContent from '../CartContent/CartContent';\n\nconst CartController = () => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // Check if cart token exists in LocalStorage\n  const [cartToken, setCartToken] = useState<string>(null);\n\n  // Create new cart if token does not exist\n  const createVars: CreateCartRequest = {\n    input: {},\n  };\n  const [createCart, {\n    data: createCartData,\n    loading: createCartLoading,\n    error: createCartError,\n  }] = useMutation<CreateCartResponse>(CREATE_CART, {\n    variables: createVars,\n  });\n\n  // Get cart data\n  const variables: GetCartRequest = {\n    checkoutId: cartToken,\n  };\n  const {\n    data: getCartData,\n    loading: getCartLoading,\n    error: getCartError,\n  } = useQuery(GET_CART_QUERY, {\n    skip: !cartToken,\n    variables,\n  });\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n\n  const handleOpen = (event) => {\n    handleClick(event);\n    setOpen(true);\n  };\n\n\n  useEffect(() => {\n    if (window.localStorage && !getCartData) {\n      setCartToken(window.localStorage.getItem('shopifyCartToken'));\n\n      if (!window.localStorage.getItem('shopifyCartToken')) {\n        createCart().then((res) => {\n          // console.log(res);\n        });\n      }\n    }\n\n    // To be executed after new cart is created\n    const onCompleted = (res) => {\n      if (res) {\n        // console.log(res);\n        setCartToken(res.checkoutCreate.checkout.id);\n        localStorage.setItem('shopifyCartToken', cartToken);\n      }\n    };\n\n    // To be executed after create cart error\n    const onError = (error) => <div>{error}</div>;\n\n    if (onCompleted || onError) {\n      if (onCompleted && !createCartLoading && !createCartError) {\n        onCompleted(createCartData);\n      } else if (onError && !createCartLoading && createCartError) {\n        onError(createCartError);\n      }\n    }\n  }, [cartToken, createCart, createCartData, createCartError, createCartLoading, getCartData]);\n\n  return (\n    <div id=\"cart-btn\">\n      {(createCartLoading || getCartLoading) && (\n        <Typography variant=\"body2\">Loading cart...</Typography>\n      )}\n      {(createCartError || getCartError) && (\n        <Typography variant=\"body2\">Error!</Typography>\n      )}\n      {(\n        !getCartLoading && !createCartLoading\n        && !getCartError && !createCartError\n        && getCartData)\n      && (\n        <>\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            aria-label=\"cart\"\n            onClick={handleOpen}\n          >\n            <ShoppingCartIcon />\n          </IconButton>\n          <Popover\n            open={open}\n            onClose={handleClose}\n            disableScrollLock\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n          >\n            <CartContent cart={getCartData} />\n          </Popover>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CartController;\n"]},"metadata":{},"sourceType":"module"}