{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { Styled } from './_styles';\nimport { PRODUCT_INFO_QUERY } from './_types';\nimport ProductDetail from '../ProductDetail/ProductDetail';\nimport ManualToothbrush from '../pdp/ManualToothbrush';\nimport PageContainer, { PageSize } from \"~viewsLay/PageContainer\";\n\nconst PDPComponent = ({\n  handle\n}) => {\n  let product = null;\n  const queryVariables = {\n    handle: `${handle}`\n  };\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PRODUCT_INFO_QUERY, {\n    variables: queryVariables\n  });\n\n  function extractProduct() {\n    return {\n      id: data.productByHandle.id,\n      handle: data.productByHandle.handle,\n      title: data.productByHandle.title,\n      description: data.productByHandle.description,\n      imageSrc: data.productByHandle.images.edges[0].node.transformedSrc,\n      price: data.productByHandle.priceRange.minVariantPrice.amount,\n      variants: data.productByHandle.variants\n    };\n  }\n\n  if (!loading && !error && data) {\n    product = extractProduct();\n  }\n\n  return __jsx(React.Fragment, null, loading && __jsx(Typography, {\n    variant: \"body1\"\n  }, \"Loading...\"), !loading && !error && product && __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, product.title), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  })), product.handle === 'm1' ? __jsx(ManualToothbrush, {\n    product: product\n  }) : __jsx(PageContainer, {\n    size: PageSize.medium,\n    paddingTop: 45\n  }, __jsx(Styled.PDPContainer, null, __jsx(Styled.PDPMain, null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"secondary\"\n  }, \"Back\")), __jsx(ProductDetail, {\n    product: product\n  }))))));\n};\n\nexport default PDPComponent;","map":{"version":3,"sources":["/Users/colgate/Desktop/react-store/components/PDPComponent/PDPComponent.tsx"],"names":["React","Button","Typography","useQuery","Link","Head","Styled","PRODUCT_INFO_QUERY","ProductDetail","ManualToothbrush","PageContainer","PageSize","PDPComponent","handle","product","queryVariables","loading","error","data","variables","extractProduct","id","productByHandle","title","description","imageSrc","images","edges","node","transformedSrc","price","priceRange","minVariantPrice","amount","variants","medium"],"mappings":";AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,kBAAR,QAAqE,UAArE;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,aAAP,IAAuBC,QAAvB,QAAsC,yBAAtC;;AAMA,MAAMC,YAAsC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACpE,MAAIC,OAA2B,GAAG,IAAlC;AACA,QAAMC,cAAsB,GAAG;AAC7BF,IAAAA,MAAM,EAAG,GAAEA,MAAO;AADW,GAA/B;AAGA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CACvCI,kBADuC,EAEvC;AACEY,IAAAA,SAAS,EAAEJ;AADb,GAFuC,CAAzC;;AAOA,WAASK,cAAT,GAA8C;AAC5C,WAAQ;AACNC,MAAAA,EAAE,EAAEH,IAAI,CAACI,eAAL,CAAqBD,EADnB;AAENR,MAAAA,MAAM,EAAEK,IAAI,CAACI,eAAL,CAAqBT,MAFvB;AAGNU,MAAAA,KAAK,EAAEL,IAAI,CAACI,eAAL,CAAqBC,KAHtB;AAINC,MAAAA,WAAW,EAAEN,IAAI,CAACI,eAAL,CAAqBE,WAJ5B;AAKNC,MAAAA,QAAQ,EAAEP,IAAI,CAACI,eAAL,CAAqBI,MAArB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAqCC,IAArC,CAA0CC,cAL9C;AAMNC,MAAAA,KAAK,EAAEZ,IAAI,CAACI,eAAL,CAAqBS,UAArB,CAAgCC,eAAhC,CAAgDC,MANjD;AAONC,MAAAA,QAAQ,EAAEhB,IAAI,CAACI,eAAL,CAAqBY;AAPzB,KAAR;AASD;;AAED,MAAI,CAAClB,OAAD,IAAY,CAACC,KAAb,IAAsBC,IAA1B,EAAgC;AAC9BJ,IAAAA,OAAO,GAAGM,cAAc,EAAxB;AACD;;AAED,SACE,4BACGJ,OAAO,IACN,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,kBAFJ,EAKG,CAACA,OAAD,IAAY,CAACC,KAAb,IAAsBH,OAAtB,IACC,4BACE,MAAC,IAAD,QACE,qBAAQA,OAAO,CAACS,KAAhB,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAFF,CADF,EAKIT,OAAO,CAACD,MAAR,KAAmB,IAAnB,GACA,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEC;AAA3B,IADA,GAGA,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEH,QAAQ,CAACwB,MAA9B;AAAsC,IAAA,UAAU,EAAE;AAAlD,KACE,MAAC,MAAD,CAAQ,YAAR,QACE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC;AAAjC,YADF,CADF,EAIE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAErB;AAAxB,IAJF,CADF,CADF,CARJ,CANJ,CADF;AA8BD,CA1DD;;AA4DA,eAAeF,YAAf","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport {Button, Typography} from '@material-ui/core';\nimport {useQuery} from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport {Styled} from './_styles';\nimport {PRODUCT_INFO_QUERY, ProductDetails, TransformedProduct} from './_types';\nimport ProductDetail from '../ProductDetail/ProductDetail';\nimport ManualToothbrush from '../pdp/ManualToothbrush';\nimport PageContainer, {PageSize} from \"~viewsLay/PageContainer\";\n\ntype Props = {\n  handle: string;\n};\n\nconst PDPComponent: FunctionComponent<Props> = ({ handle }: Props) => {\n  let product: TransformedProduct = null;\n  const queryVariables: object = {\n    handle: `${handle}`,\n  };\n  const { loading, error, data } = useQuery<ProductDetails, object>(\n    PRODUCT_INFO_QUERY,\n    {\n      variables: queryVariables,\n    },\n  );\n\n  function extractProduct(): TransformedProduct {\n    return ({\n      id: data.productByHandle.id,\n      handle: data.productByHandle.handle,\n      title: data.productByHandle.title,\n      description: data.productByHandle.description,\n      imageSrc: data.productByHandle.images.edges[0].node.transformedSrc,\n      price: data.productByHandle.priceRange.minVariantPrice.amount,\n      variants: data.productByHandle.variants,\n    });\n  }\n\n  if (!loading && !error && data) {\n    product = extractProduct();\n  }\n\n  return (\n    <>\n      {loading && (\n        <Typography variant=\"body1\">Loading...</Typography>\n      )}\n\n      {!loading && !error && product && (\n        <>\n          <Head>\n            <title>{product.title}</title>\n            <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n          </Head>\n          { product.handle === 'm1' ? (\n            <ManualToothbrush product={product} />\n          ) : (\n            <PageContainer size={PageSize.medium} paddingTop={45}>\n              <Styled.PDPContainer>\n                <Styled.PDPMain>\n                  <Link href=\"/\">\n                    <Button variant=\"outlined\" color=\"secondary\">Back</Button>\n                  </Link>\n                  <ProductDetail product={product} />\n                </Styled.PDPMain>\n              </Styled.PDPContainer>\n            </PageContainer>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PDPComponent;\n"]},"metadata":{},"sourceType":"module"}